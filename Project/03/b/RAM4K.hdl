// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address[9..11], a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);
    RAM512(in=in, load=loada, address=address[0..8], out=res0);
    RAM512(in=in, load=loadb, address=address[0..8], out=res1);
    RAM512(in=in, load=loadc, address=address[0..8], out=res2);
    RAM512(in=in, load=loadd, address=address[0..8], out=res3);
    RAM512(in=in, load=loade, address=address[0..8], out=res4);
    RAM512(in=in, load=loadf, address=address[0..8], out=res5);
    RAM512(in=in, load=loadg, address=address[0..8], out=res6);
    RAM512(in=in, load=loadh, address=address[0..8], out=res7);
    Mux8Way16(a=res0 ,b=res1 ,c=res2 ,d=res3 ,e=res4 ,f=res5 ,g=res6 ,h=res7 ,sel=address[9..11] ,out=out ); 
}